# 使用官方的 PHP 基础镜像
FROM php:8.2-fpm

# 设置工作目录
WORKDIR /var/www

# 安装 PHP 扩展（根据需要安装其他扩展）
RUN docker-php-ext-install mysqli pdo_mysql

# 安装 composer
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php && \
    php -r "unlink('composer-setup.php');" && \
    mv composer.phar /usr/local/bin/composer

# 安装 git
#RUN apt-get install git

# 安装 history 命令
RUN apt-get install bash

# 安装 swoole 扩展
# RUN pecl -q install swoole;
# RUN cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini
# RUN echo "extension=swoole.so" >> /usr/local/etc/php/php.ini

# 安装 soap 扩展
# RUN docker-php-ext-install soap

# 安装 zip 扩展
# RUN apt-get install zip unzip
# RUN docker-php-ext-install fileinfo

# 安装 gd 扩展
RUN apt-get update && apt-get install -y \
		libfreetype-dev \
		libjpeg62-turbo-dev \
		libpng-dev \
	&& docker-php-ext-configure gd --with-freetype --with-jpeg \
	&& docker-php-ext-install -j$(nproc) gd

# 安装 redis 扩展
RUN pecl install redis-5.3.7 \
	&& pecl install xdebug-3.2.1 \
	&& docker-php-ext-enable redis xdebug

# 复制应用程序代码到工作目录
# COPY . /var/www/html

# 将你的自定义配置文件复制到容器中
# COPY php.ini /usr/local/etc/php/conf.d/custom.ini

# 设置 PHP-FPM 的配置文件
# COPY php-fpm.conf /usr/local/etc/php-fpm.conf

# 暴露 PHP-FPM 默认监听的端口
EXPOSE 9001

# 设置容器启动时运行的命令
#CMD ["php-fpm"]