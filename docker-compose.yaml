
services:
  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile-php-new
    ports:
      - "9501:9501"
      - "9508:9508"
      - "9510:9510"
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
    networks:
      - app-network
    container_name: php

#  php8.2-fpm:
#    build:
#      context: .
#      dockerfile: Dockerfile-php-8.2
#    ports:
#      - "9502:9502"
#    volumes:
#      - ${APP_CODE_PATH_HOST}:/var/www
#    networks:
#      - app-network
#    container_name: php8.2
  

  php8.3-fpm:
    build:
      context: .
      dockerfile: Dockerfile-php-8.3
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
    networks:
      - app-network
    container_name: php8.3

  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    ports:
      - "80:80"
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
      - ${APP_DOCKER_PATH_HOST}/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php-fpm
      - php8.3-fpm
    networks:
      - app-network
    links:
      - php-fpm
      - php8.3-fpm
    container_name: nginx

  mysql:
    build:
      context: .
      dockerfile: Dockerfile-mysql
    ports:
      - "3306:3306"
    volumes:
      - ${APP_DOCKER_PATH_HOST}/mysql/mysql-1/data:/var/lib/mysql
      - ${APP_DOCKER_PATH_HOST}/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - app-network
    container_name: mysql

  node:
    build:
      context: .
      dockerfile: Dockerfile-node
    ports:
      - "3000:3000"
      - "8000:8000"
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www
    networks:
      - app-network
    container_name: node

  redis:
    build:
      context: .
      dockerfile: Dockerfile-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/usr/local/etc/redis
      - ./redis/data:/usr/local/redis/data
      - ./redis/log:/usr/local/redis/log
    networks:
      - app-network
    container_name: redis

#  shardingsphere:
#    build:
#      context: .
#      dockerfile: Dockerfile-shardingsphere
#    ports:
#      - "3310:3310"
#      - "3309:3309"
#    volumes:
#      - /${APP_DOCKER_PATH_HOST}/shardingsphere/conf:/opt/shardingsphere-proxy/conf
#    networks:
#      - app-network
#    container_name: shardingsphere


  
#  从库，不需要用主从同步可以不加这块
#
#  mysql_2:
#    build:
#      context: .
#      dockerfile: Dockerfile-mysql
#    ports:
#      - "3307:3306"
#    volumes:
#      - /www/data/mysql-2:/var/lib/mysql
#      - ${APP_DOCKER_PATH_HOST}/mysql/mysql-2/conf.d:/etc/mysql/conf.d
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge


